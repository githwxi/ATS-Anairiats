<!--
The file is automatically generated by [atsdoc] from main.atxt.
-->
<!--
Time of Generation: Thu Jan 29 10:17:11 2015
-->
<chapter id="library_support">
<title>Library Support</title>

<para>
There are three built-in libraries in the ATS programming language
system: <ulink
url="http://www.ats-lang.org/DOCUMENTATION/ANAIRIATS/prelude/"><filename>prelude</filename></ulink>,
<ulink
url="http://www.ats-lang.org/DOCUMENTATION/ANAIRIATS/libc/"><filename>libc</filename></ulink>,
and <ulink
url="http://www.ats-lang.org/DOCUMENTATION/ANAIRIATS/libats/"><filename>libats</filename></ulink>.

</para>

<sect1>
<title>The prelude Library</title>

<para>
The prelude library provides support for funcions that are commonly
needed in practice. The files containing the interfaces for these functions
are mostly stored in the directory <ulink
url="http://www.ats-lang.org/DOCUMENTATION/ANAIRIATS/prelude/SATS/">
<filename>prelude/SATS</filename></ulink>.  I list some of these files as
follows and also briefly explain what these files are for.

</para>

<itemizedlist>

<!-- ****** ****** -->

<listitem>
<para><ulink
url="http://www.ats-lang.org/DOCUMENTATION/ANAIRIATS/prelude/SATS/bool.sats">
<filename>prelude/SATS/bool.sats</filename></ulink>: This package is for
boolean values of the type <code>bool</code>, which is mapped to the type
int in the C programming language.
</para>
</listitem>

<!-- ****** ****** -->

<listitem>
<para><ulink
url="http://www.ats-lang.org/DOCUMENTATION/ANAIRIATS/prelude/SATS/char.sats">
<filename>prelude/SATS/char.sats</filename></ulink>: This package is for
character values of various types: <code>char</code> for chars, which
may or may not be signed, and <code>uchar</code> for unsigned chars, and
<code>schar</code> for signed chars. These types are mapped to the types
char, uchar and schar in the C programming language.
</para>
</listitem>

<!-- ****** ****** -->

<listitem>
<para><ulink
url="http://www.ats-lang.org/DOCUMENTATION/ANAIRIATS/prelude/SATS/filebas.sats">
<filename>prelude/SATS/filebas.sats</filename></ulink>: This package
constains some functions for basic file operations.
</para>
</listitem>

<!-- ****** ****** -->

<listitem>
<para><ulink
url="http://www.ats-lang.org/DOCUMENTATION/ANAIRIATS/prelude/SATS/float.sats">
<filename>prelude/SATS/float.sats</filename></ulink>: This package is for
floating point numbers of various types: <code>float</code> for single
precision represention, <code>double</code> for double precision
represention, and <code>ldouble</code> for long double precision
represention. These types are mapped to the following types in the C
programming language: float, double, and long double.
</para>
</listitem>

<!-- ****** ****** -->

<listitem>
<para><ulink
url="http://www.ats-lang.org/DOCUMENTATION/ANAIRIATS/prelude/SATS/integer.sats">
<filename>prelude/SATS/integer.sats</filename></ulink>: This package is for
finite precision integers of all sorts of types: <code>int</code> for
signed integers, <code>uint</code> for unsigned integers, <code>lint</code>
for signed long integers, <code>ulint</code> for unsigned long integers,
<code>llint</code> for signed long long integers, and <code>ullint</code>
for unsigned long long integers.  These types are mapped to the following
types in the C programming lanuguage: int, unsigned int, long int, unsigned
long int, long long int, unsigned long long int.
</para>
</listitem>

<!-- ****** ****** -->

<listitem>
<para><ulink
url="http://www.ats-lang.org/DOCUMENTATION/ANAIRIATS/prelude/SATS/string.sats">
<filename>prelude/SATS/string.sats</filename></ulink>:
This package constains various functions for processing strings.
</para>
</listitem>

<!-- ****** ****** -->

<listitem>
<para>
<ulink
url="http://www.ats-lang.org/DOCUMENTATION/ANAIRIATS/prelude/SATS/array0.sats">
<filename>prelude/SATS/array0.sats</filename></ulink>: This package is for
arrays with size information attached. The functions in it are
relatively easy to use but they may incur run-time array bounds checking.

</para>
</listitem>

<!-- ****** ****** -->

<listitem>
<para>
<ulink
url="http://www.ats-lang.org/DOCUMENTATION/ANAIRIATS/prelude/SATS/list0.sats">
<filename>prelude/SATS/list0.sats</filename></ulink>: This package is for
values representing functional lists that are assgined the type
<code>list0</code>(T) for some type T.

</para>
</listitem>

<!-- ****** ****** -->

<listitem>
<para>
<ulink
url="http://www.ats-lang.org/DOCUMENTATION/ANAIRIATS/prelude/SATS/matrix0.sats">
<filename>prelude/SATS/matrix0.sats</filename></ulink>: This package is for
matrices, that is, two-dimensional arrays, with dimension information, that
is, the number of rows and the number of columns, attached. The functions
in it are relatively easy to use but they may incur run-time array bounds
checking.

</para>
</listitem>

</itemizedlist>

<para>
Note that programming with functions in the prelude library often requires
the support of dependent types and linear types, which I will cover elsewhere.

</para>

</sect1>

<sect1>
<title>The libc Library</title>
<para></para>
</sect1>

<sect1>
<title>The libats Library</title>
<para></para>
</sect1>

<sect1>
<title>Contributed Packages</title>
<para></para>
</sect1>

</chapter>

<!-- ****** ****** -->
<!-- end of [main.atxt] -->


